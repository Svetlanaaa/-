#pragma once
#include <stdio.h>
#include "room.h"
#include <iostream>
using namespace std;

struct Node       //Структура являющаяся звеном списка
{
	Room *r;     //Адрес этой комнаты будет добавляться в список
	Node *next; //Указатели на адреса следующей комнаты в списке
};

class List   //Создаем тип данных Список
{
	Node *head; //Указатель на адрес начала списка
public:
	Node getHead() { return *head; };
	List() //Конструктор
	{
		head = NULL;
	}

/*	~List() //Деструктор
	{
		while (head) //Пока по адресу на начало списка что-то есть
		{
			Node *temp = head->next; //Временная переменная для хранения адреса следующего элемента
			delete head; //Освобождаем адрес обозначающий начало
		    head = temp; //Меняем адрес на следующий
		}
	}*/
	void show() //Функция отображения списка на экране
	{
		Node *temp = head; //Определяем указатель, который изначально равен адресу начала списка
		while (temp != NULL) //До тех пор пока не встретит пустое значение
		{
			temp->r->showRoom();
			cout << endl; //Вывод информации о комнате
			temp = temp->next; //Указываем, что далее нам нужен следующий элемент
		}
	}

	void add(Room* r) //Функция добавления элементов в список
	{
		Node *temp= new Node; //Выделение памяти под новый элемент структуры
	
		temp->next = head; //Новый элемент указывает на голову 
		temp->r = r;//Записываем адрес новой комнаты в структуру
		head = temp; //Голова = тот элемент, что сейчас добавили, т.е. элемент добавляется в начало списка
	}
};

